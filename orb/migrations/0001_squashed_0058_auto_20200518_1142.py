# -*- coding: utf-8 -*-
# Generated by Django 1.11.18 on 2020-05-19 18:28
from __future__ import unicode_literals

import ckeditor.fields
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager
import orb.fields
import uuid


# Functions from the following migrations need manual copying.
# Move them and any dependencies into this file, then update the
# RunPython operations to refer to the local versions:
# orb.migrations.0038_add_guid_values
# orb.migrations.0047_update_pending_status

class Migration(migrations.Migration):

    replaces = [('orb', '0001_initial'), ('orb', '0002_resourceworkflowtracker'), ('orb', '0003_auto_20150420_2152'), ('orb', '0004_auto_20150420_2152'), ('orb', '0005_resourcecriteria'), ('orb', '0006_auto_20150422_2110'), ('orb', '0007_auto_20150428_1804'), ('orb', '0008_resourceurl_file_size'), ('orb', '0009_auto_20150504_1403'), ('orb', '0010_tagtracker'), ('orb', '0011_auto_20150504_1905'), ('orb', '0012_auto_20150505_1740'), ('orb', '0013_auto_20150506_1914'), ('orb', '0014_auto_20150508_1718'), ('orb', '0015_searchtracker_extra_data'), ('orb', '0016_auto_20150525_1536'), ('orb', '0017_auto_20150605_1823'), ('orb', '0018_userprofile_photo'), ('orb', '0019_resource_attribution'), ('orb', '0020_auto_20150707_1245'), ('orb', '0021_tagproperty'), ('orb', '0022_auto_20150825_1318'), ('orb', '0023_auto_20151028_2050'), ('orb', '0024_consolidate_resource_constants'), ('orb', '0025_specify_profile_db_table'), ('orb', '0026_auto_20160719_2027'), ('orb', '0027_auto_20160722_2028'), ('orb', '0024_auto_20160509_1556'), ('orb', '0025_es_pt_language_fields'), ('orb', '0028_merge'), ('orb', '0029_auto_20160816_1137'), ('orb', '0030_auto_20160907_1547'), ('orb', '0031_auto_20160909_1450'), ('orb', '0032_resourcecriteria_role'), ('orb', '0033_auto_20161004_2026'), ('orb', '0034_auto_20161004_2145'), ('orb', '0035_auto_20161019_1415'), ('orb', '0036_auto_20161123_0946'), ('orb', '0037_resource_guid_field'), ('orb', '0038_add_guid_values'), ('orb', '0039_add_default_guid'), ('orb', '0040_add_tracking_fields'), ('orb', '0041_auto_20170220_2036'), ('orb', '0041_auto_20170207_0051'), ('orb', '0042_merge'), ('orb', '0043_tag_published'), ('orb', '0044_auto_20170406_1927'), ('orb', '0045_auto_20170414_1715'), ('orb', '0046_remove_mep_crt'), ('orb', '0047_update_pending_status'), ('orb', '0048_userprofile_survey'), ('orb', '0049_survey_questions'), ('orb', '0050_auto_20180501_1654'), ('orb', '0051_auto_20180501_1702'), ('orb', '0052_auto_20180501_1827'), ('orb', '0053_auto_20180501_1845'), ('orb', '0054_auto_20180501_1901'), ('orb', '0055_resourcefile_sha1'), ('orb', '0056_auto_20200409_0712'), ('orb', '0057_auto_20200420_0657'), ('orb', '0058_auto_20200518_1142')]

    initial = True

    dependencies = [
        ('peers', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('top_level', models.BooleanField(default=False)),
                ('slug', models.CharField(blank=True, max_length=100, null=True)),
                ('order_by', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='Resource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField()),
                ('description', models.TextField()),
                ('image', models.ImageField(blank=True, max_length=200, null=True, upload_to=b'resourceimage/%Y/%m/%d')),
                ('status', models.CharField(choices=[(b'rejected', 'Rejected'), (b'pending', 'Pending CRT'), (b'pending_mrt', 'Pending MRT'), (b'approved', 'Approved')], default=b'pending', max_length=50)),
                ('create_date', models.DateTimeField(auto_now_add=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('slug', models.CharField(blank=True, max_length=100, null=True)),
                ('study_time_number', models.IntegerField(blank=True, default=0, null=True)),
                ('study_time_unit', models.CharField(blank=True, choices=[(b'mins', 'Mins'), (b'hours', 'Hours'), (b'days', 'Days'), (b'weeks', 'Weeks')], max_length=10, null=True)),
                ('born_on', models.DateTimeField(blank=True, default=None, null=True)),
                ('create_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='resource_create_user', to=settings.AUTH_USER_MODEL)),
                ('update_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='resource_update_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Resource',
                'verbose_name_plural': 'Resources',
            },
        ),
        migrations.CreateModel(
            name='ResourceFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(max_length=200, upload_to=b'resource/%Y/%m/%d')),
                ('title', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('create_date', models.DateTimeField(auto_now_add=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('file_full_text', models.TextField(blank=True, default=None, null=True)),
                ('create_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='resource_file_create_user', to=settings.AUTH_USER_MODEL)),
                ('resource', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='orb.Resource')),
                ('update_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='resource_file_update_user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ResourceRating',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(auto_now_add=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('rating', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('comments', models.TextField(blank=True, default=None, null=True)),
                ('resource', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='orb.Resource')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ResourceRelationship',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('relationship_type', models.CharField(choices=[(b'is_translation_of', 'is translation of'), (b'is_derivative_of', 'is derivative of'), (b'is_contained_in', 'is contained in')], max_length=50)),
                ('description', models.TextField()),
                ('create_date', models.DateTimeField(auto_now_add=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('create_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='resource_relationship_create_user', to=settings.AUTH_USER_MODEL)),
                ('resource', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='resource', to='orb.Resource')),
                ('resource_related', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='resource_related', to='orb.Resource')),
                ('update_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='resource_relationship_update_user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ResourceTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(auto_now_add=True)),
                ('create_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='resourcetag_create_user', to=settings.AUTH_USER_MODEL)),
                ('resource', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='orb.Resource')),
            ],
        ),
        migrations.CreateModel(
            name='ResourceTracker',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[(b'view', 'View'), (b'view-api', 'View-api'), (b'edit', 'Edit'), (b'download', 'Download'), (b'create', 'Create')], default=b'view', max_length=50)),
                ('access_date', models.DateTimeField(auto_now_add=True)),
                ('ip', models.IPAddressField(blank=True, default=None, null=True)),
                ('user_agent', models.TextField(blank=True, default=None, null=True)),
                ('extra_data', models.TextField(blank=True, default=None, null=True)),
                ('resource', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='orb.Resource')),
                ('resource_file', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='orb.ResourceFile')),
            ],
        ),
        migrations.CreateModel(
            name='ResourceURL',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField(max_length=500)),
                ('title', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('create_date', models.DateTimeField(auto_now_add=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('create_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='resource_url_create_user', to=settings.AUTH_USER_MODEL)),
                ('resource', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='orb.Resource')),
                ('update_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='resource_url_update_user', to=settings.AUTH_USER_MODEL)),
                ('order_by', models.IntegerField(default=0)),
                ('file_size', models.IntegerField(default=0)),
                ('image', models.ImageField(blank=True, max_length=200, null=True, upload_to=b'resourceimage/%Y/%m/%d')),
                ('description_en', models.TextField(blank=True, null=True)),
                ('title_en', models.TextField(blank=True, null=True)),
                ('guid', models.UUIDField(editable=False, null=True, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='SearchTracker',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('query', models.TextField(blank=True, default=None, null=True)),
                ('no_results', models.IntegerField(blank=True, default=0, null=True)),
                ('access_date', models.DateTimeField(auto_now_add=True)),
                ('ip', models.GenericIPAddressField(blank=True, default=None, null=True)),
                ('user_agent', models.TextField(blank=True, default=None, null=True)),
                ('type', models.CharField(choices=[(b'search', 'search'), (b'search-api', 'search-api'), (b'search-adv', 'search-adv')], default=b'search', max_length=50)),
                ('user', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('extra_data', models.TextField(blank=True, default=None, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('create_date', models.DateTimeField(auto_now_add=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to=b'tag/%Y/%m/%d')),
                ('slug', models.CharField(blank=True, max_length=100, null=True)),
                ('order_by', models.IntegerField(default=0)),
                ('external_url', models.URLField(blank=True, default=None, max_length=500, null=True)),
                ('description', models.TextField(blank=True, default=None, null=True)),
                ('summary', models.CharField(blank=True, max_length=100, null=True)),
                ('contact_email', models.CharField(blank=True, max_length=100, null=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='orb.Category')),
                ('create_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tag_create_user', to=settings.AUTH_USER_MODEL)),
                ('parent_tag', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='orb.Tag')),
                ('update_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tag_update_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Tag',
                'verbose_name_plural': 'Tags',
            },
        ),
        migrations.CreateModel(
            name='TagOwner',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='orb.Tag')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('about', models.TextField(blank=True, default=None, null=True)),
                ('job_title', models.TextField(blank=True, default=None, null=True)),
                ('role_other', models.TextField(blank=True, default=None, null=True)),
                ('phone_number', models.TextField(blank=True, default=None, null=True)),
                ('api_access', models.BooleanField(default=False)),
                ('gender', models.CharField(choices=[(b'female', 'Female'), (b'male', 'Male'), (b'none', 'Prefer not to say')], default=b'none', max_length=50)),
                ('age_range', models.CharField(choices=[(b'under_18', 'under 18'), (b'18_25', '18-24'), (b'25_35', '25-34'), (b'35_50', '35-50'), (b'over_50', 'over 50'), (b'none', 'Prefer not to say')], default=b'none', max_length=50)),
                ('mailing', models.BooleanField(default=False)),
                ('create_date', models.DateTimeField(auto_now_add=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('organisation', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='organisation', to='orb.Tag')),
                ('role', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='role', to='orb.Tag')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('twitter', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('website', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('photo', models.ImageField(blank=True, max_length=200, null=True, upload_to=b'userprofile/%Y/%m/%d')),
                ('crt_member', models.BooleanField(default=False)),
                ('mep_member', models.BooleanField(default=False)),
            ],
        ),
        migrations.AlterUniqueTogether(
            name='tagowner',
            unique_together=set([('user', 'tag')]),
        ),
        migrations.AddField(
            model_name='resourcetracker',
            name='resource_url',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='orb.ResourceURL'),
        ),
        migrations.AddField(
            model_name='resourcetracker',
            name='user',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='resourcetag',
            name='tag',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='orb.Tag'),
        ),
        migrations.AlterUniqueTogether(
            name='resourcetag',
            unique_together=set([('resource', 'tag')]),
        ),
        migrations.CreateModel(
            name='ResourceWorkflowTracker',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[(b'rejected', 'Rejected'), (b'pending_crt', 'Pending'), (b'pending_mrt', 'Pending'), (b'approved', 'Approved')], default=b'pending_crt', max_length=50)),
                ('notes', models.TextField(blank=True, null=True)),
                ('owner_email_sent', models.BooleanField(default=False)),
                ('create_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('resource', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='workflow_trackers', to='orb.Resource')),
            ],
        ),
        migrations.CreateModel(
            name='ResourceCriteria',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField()),
                ('order_by', models.IntegerField(default=0)),
                ('category', models.CharField(choices=[(b'qa', 'Quality Assurance'), (b'value', 'Value for Frontline Health Workers (FLHW)'), (b'video', 'Video resources'), (b'animation', 'Animation resources'), (b'audio', 'Audio resources'), (b'text', 'Text based resources')], default=None, max_length=50)),
                ('category_order_by', models.IntegerField(default=0)),
                ('description_en', models.TextField(null=True)),
            ],
            options={
                'verbose_name': 'resource criterion',
                'verbose_name_plural': 'resource criteria',
            },
        ),
        migrations.AddField(
            model_name='resourcefile',
            name='order_by',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='resourcefile',
            name='image',
            field=models.ImageField(blank=True, max_length=200, null=True, upload_to=b'resourceimage/%Y/%m/%d'),
        ),
        migrations.CreateModel(
            name='TagTracker',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[(b'view', 'View'), (b'view-api', 'View-API'), (b'view-url', 'View-URL')], default=b'view', max_length=50)),
                ('access_date', models.DateTimeField(auto_now_add=True)),
                ('ip', models.GenericIPAddressField(blank=True, default=None, null=True)),
                ('user_agent', models.TextField(blank=True, default=None, null=True)),
                ('extra_data', models.TextField(blank=True, default=None, null=True)),
                ('tag', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='orb.Tag')),
                ('user', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AlterField(
            model_name='resourcetracker',
            name='resource',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='orb.Resource'),
        ),
        migrations.AlterField(
            model_name='resourcetracker',
            name='resource_file',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='orb.ResourceFile'),
        ),
        migrations.AlterModelOptions(
            name='category',
            options={'ordering': ('name',), 'verbose_name': 'Category', 'verbose_name_plural': 'Categories'},
        ),
        migrations.AlterModelOptions(
            name='resource',
            options={'ordering': ('title',), 'verbose_name': 'Resource', 'verbose_name_plural': 'Resources'},
        ),
        migrations.AlterModelOptions(
            name='tag',
            options={'ordering': ('name',), 'verbose_name': 'Tag', 'verbose_name_plural': 'Tags'},
        ),
        migrations.AddField(
            model_name='resource',
            name='attribution',
            field=models.TextField(blank=True, default=None, null=True),
        ),
        migrations.CreateModel(
            name='TagProperty',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('value', models.TextField()),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='orb.Tag')),
            ],
            options={
                'ordering': ('tag', 'name', 'value'),
                'verbose_name': 'Tag property',
                'verbose_name_plural': 'Tag properties',
            },
        ),
        migrations.CreateModel(
            name='Collection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField()),
                ('description', models.TextField(blank=True, default=None, null=True)),
                ('visibility', models.CharField(choices=[(b'public', 'Public'), (b'private', 'Private')], default=b'private', max_length=50)),
                ('image', models.ImageField(blank=True, null=True, upload_to=b'collection/%Y/%m/%d')),
                ('slug', models.CharField(blank=True, max_length=500, null=True)),
                ('create_date', models.DateTimeField(auto_now_add=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ('title',),
                'verbose_name': 'Collection',
                'verbose_name_plural': 'Collections',
            },
        ),
        migrations.CreateModel(
            name='CollectionResource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_by', models.IntegerField(default=0)),
                ('collection', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='orb.Collection')),
                ('resource', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='orb.Resource')),
            ],
            options={
                'ordering': ('collection', 'order_by', 'resource'),
                'verbose_name': 'Collection resource',
                'verbose_name_plural': 'Collection resources',
            },
        ),
        migrations.CreateModel(
            name='CollectionUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('collection', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='orb.Collection')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('collection', 'user'),
                'verbose_name': 'Collection user',
                'verbose_name_plural': 'Collection users',
            },
        ),
        migrations.AlterField(
            model_name='resourcetracker',
            name='ip',
            field=models.GenericIPAddressField(blank=True, default=None, null=True),
        ),
        migrations.AlterModelTable(
            name='userprofile',
            table='orb_userprofile',
        ),
        migrations.CreateModel(
            name='ReviewerRole',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[(b'medical', 'Medical'), (b'technical', 'Technical'), (b'training', 'Training')], default=b'medical', max_length=100, unique=True)),
            ],
        ),
        migrations.AddField(
            model_name='userprofile',
            name='reviewer_role',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='orb.ReviewerRole'),
        ),
        migrations.AlterField(
            model_name='category',
            name='slug',
            field=orb.fields.AutoSlugField(blank=True, editable=False, max_length=100, null=True, populate_from=b'name', unique=True),
        ),
        migrations.AlterField(
            model_name='collection',
            name='slug',
            field=orb.fields.AutoSlugField(blank=True, editable=False, max_length=255, null=True, populate_from=b'title', unique=True),
        ),
        migrations.AlterField(
            model_name='resource',
            name='slug',
            field=orb.fields.AutoSlugField(blank=True, editable=False, max_length=100, null=True, populate_from=b'title', unique=True),
        ),
        migrations.AlterField(
            model_name='tag',
            name='slug',
            field=orb.fields.AutoSlugField(blank=True, editable=False, max_length=100, null=True, populate_from=b'name', unique=True),
        ),
        migrations.AddField(
            model_name='category',
            name='name_en',
            field=models.CharField(max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='tag',
            name='description_en',
            field=models.TextField(blank=True, default=None, null=True),
        ),
        migrations.AddField(
            model_name='tag',
            name='name_en',
            field=models.CharField(max_length=100, null=True, unique=True),
        ),
        migrations.AddField(
            model_name='tag',
            name='summary_en',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AlterModelOptions(
            name='userprofile',
            options={'verbose_name': 'user profile', 'verbose_name_plural': 'user profiles'},
        ),
        migrations.AddField(
            model_name='resource',
            name='attribution_en',
            field=models.TextField(blank=True, default=None, null=True),
        ),
        migrations.AddField(
            model_name='resource',
            name='description_en',
            field=models.TextField(null=True),
        ),
        migrations.AddField(
            model_name='resource',
            name='title_en',
            field=models.TextField(null=True),
        ),
        migrations.AddField(
            model_name='resourcefile',
            name='description_en',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='resourcefile',
            name='title_en',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='tag',
            name='name',
            field=models.CharField(max_length=100, unique=True),
        ),
        migrations.AddField(
            model_name='resourcecriteria',
            name='role',
            field=models.ForeignKey(blank=True, help_text='Used to show specific criteria to reviewers based on their role. Leave blank if criterion applies generally.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='criteria', to='orb.ReviewerRole'),
        ),
        migrations.RemoveField(
            model_name='userprofile',
            name='reviewer_role',
        ),
        migrations.AddField(
            model_name='userprofile',
            name='reviewer_roles',
            field=models.ManyToManyField(blank=True, related_name='profiles', to='orb.ReviewerRole'),
        ),
        migrations.AlterField(
            model_name='resourcecriteria',
            name='category',
            field=models.CharField(blank=True, choices=[(b'qa', 'Quality Assurance'), (b'value', 'Value for Frontline Health Workers (FLHW)'), (b'video', 'Video resources'), (b'animation', 'Animation resources'), (b'audio', 'Audio resources'), (b'text', 'Text based resources')], max_length=50, null=True),
        ),
        migrations.AlterField(
            model_name='resource',
            name='status',
            field=models.CharField(choices=[(b'rejected', 'Rejected'), (b'pending_crt', 'Pending'), (b'pending_mrt', 'Pending'), (b'approved', 'Approved')], default=b'pending_crt', max_length=50),
        ),
        migrations.AlterField(
            model_name='resourcecriteria',
            name='category',
            field=models.CharField(blank=True, choices=[(b'qa', 'Quality Assurance'), (b'value', 'Value for Frontline Health Workers (FLHW)'), (b'video', 'Video resources'), (b'animation', 'Animation resources'), (b'audio', 'Audio resources'), (b'text', 'Text based resources')], help_text='deprecated', max_length=50, null=True),
        ),
        migrations.AlterField(
            model_name='resourcecriteria',
            name='category_order_by',
            field=models.IntegerField(default=0, help_text='deprecated'),
        ),
        migrations.AddField(
            model_name='resource',
            name='guid',
            field=models.UUIDField(editable=False, null=True, unique=True),
        ),
        migrations.AddField(
            model_name='resourcefile',
            name='guid',
            field=models.UUIDField(editable=False, null=True, unique=True),
        ),
        migrations.AlterField(
            model_name='resource',
            name='guid',
            field=models.UUIDField(default=uuid.uuid4, editable=False, null=True, unique=True),
        ),
        migrations.AlterField(
            model_name='resourcefile',
            name='guid',
            field=models.UUIDField(default=uuid.uuid4, editable=False, null=True, unique=True),
        ),
        migrations.AlterField(
            model_name='resourceurl',
            name='guid',
            field=models.UUIDField(default=uuid.uuid4, editable=False, null=True, unique=True),
        ),
        migrations.AddField(
            model_name='resource',
            name='source_host',
            field=models.URLField(blank=True, help_text='Host URL of the original ORB instance where resource was sourced.', null=True),
        ),
        migrations.AddField(
            model_name='resource',
            name='source_name',
            field=models.CharField(blank=True, help_text='Name of the source ORB instance where resource was sourced.', max_length=200, null=True),
        ),
        migrations.AddField(
            model_name='resource',
            name='source_peer',
            field=models.ForeignKey(blank=True, help_text='The peer ORB from which the resource was downloaded.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='resources', to='peers.Peer'),
        ),
        migrations.AddField(
            model_name='resource',
            name='source_url',
            field=models.URLField(blank=True, help_text='Original resource URL.', null=True),
        ),
        migrations.AlterField(
            model_name='tag',
            name='name',
            field=models.CharField(max_length=100),
        ),
        migrations.AlterField(
            model_name='tag',
            name='name_en',
            field=models.CharField(max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='tag',
            name='published',
            field=models.BooleanField(default=True, help_text=b'Used to toggle status of health domains.'),
        ),
        migrations.AlterField(
            model_name='tag',
            name='parent_tag',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='orb.Tag'),
        ),
        migrations.AlterUniqueTogether(
            name='tag',
            unique_together=set([('name', 'category')]),
        ),
        migrations.AlterModelOptions(
            name='resourcetag',
            options={'ordering': ('id',)},
        ),
        migrations.AlterField(
            model_name='collection',
            name='description',
            field=models.TextField(blank=True, default=None, help_text='A description of the collection', null=True),
        ),
        migrations.AlterField(
            model_name='collection',
            name='title',
            field=models.TextField(help_text='A title for the collection'),
        ),
        migrations.RemoveField(
            model_name='userprofile',
            name='crt_member',
        ),
        migrations.RemoveField(
            model_name='userprofile',
            name='mep_member',
        ),
        migrations.AddField(
            model_name='resource',
            name='tags',
            field=models.ManyToManyField(blank=True, through='orb.ResourceTag', to='orb.Tag'),
        ),
        migrations.AlterField(
            model_name='resourcetag',
            name='tag',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='resourcetag', to='orb.Tag'),
        ),
        migrations.AlterField(
            model_name='tagowner',
            name='tag',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='owner', to='orb.Tag'),
        ),
        migrations.AlterField(
            model_name='tagproperty',
            name='tag',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='properties', to='orb.Tag'),
        ),
        migrations.AlterField(
            model_name='tagtracker',
            name='tag',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tracker', to='orb.Tag'),
        ),
        migrations.AlterField(
            model_name='resource',
            name='status',
            field=models.CharField(choices=[(b'approved', 'Approved'), (b'pending', 'Pending'), (b'rejected', 'Rejected'), (b'archived', 'Archived')], default=b'pending', max_length=50),
        ),
        migrations.AlterField(
            model_name='resourceworkflowtracker',
            name='status',
            field=models.CharField(choices=[(b'approved', 'Approved'), (b'pending', 'Pending'), (b'rejected', 'Rejected'), (b'archived', 'Archived')], default=b'pending', max_length=50),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='survey',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='resourcetracker',
            name='survey_health_worker_cadre',
            field=models.CharField(blank=True, max_length=50, null=True),
        ),
        migrations.AddField(
            model_name='resourcetracker',
            name='survey_health_worker_count',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='resourcetracker',
            name='survey_intended_use',
            field=models.CharField(blank=True, max_length=50, null=True),
        ),
        migrations.AddField(
            model_name='resourcetracker',
            name='survey_intended_use_other',
            field=models.TextField(blank=True, default=b'', null=True),
        ),
        migrations.AlterModelManagers(
            name='resource',
            managers=[
                ('resources', django.db.models.manager.Manager()),
                ('objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.AlterModelManagers(
            name='resourcecriteria',
            managers=[
                ('criteria', django.db.models.manager.Manager()),
            ],
        ),
        migrations.AlterModelManagers(
            name='resourceworkflowtracker',
            managers=[
                ('workflows', django.db.models.manager.Manager()),
            ],
        ),
        migrations.AlterModelManagers(
            name='reviewerrole',
            managers=[
                ('roles', django.db.models.manager.Manager()),
            ],
        ),
        migrations.AlterModelManagers(
            name='tag',
            managers=[
                ('tags', django.db.models.manager.Manager()),
                ('objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.AlterModelManagers(
            name='userprofile',
            managers=[
                ('profiles', django.db.models.manager.Manager()),
            ],
        ),
        migrations.AlterField(
            model_name='resource',
            name='create_user',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resource_create_user', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='resource',
            name='update_user',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resource_update_user', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='resourceurl',
            name='create_user',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resource_url_create_user', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='resourceurl',
            name='update_user',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resource_url_update_user', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='resourcefile',
            name='create_user',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resource_file_create_user', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='resourcefile',
            name='update_user',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resource_file_update_user', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='resourcerelationship',
            name='create_user',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resource_relationship_create_user', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='resourcerelationship',
            name='update_user',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resource_relationship_update_user', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='tag',
            name='create_user',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tag_create_user', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='tag',
            name='update_user',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tag_update_user', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='resource',
            name='create_user',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resource_create_user', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='resource',
            name='update_user',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resource_update_user', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='resourcefile',
            name='create_user',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resource_file_create_user', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='resourcefile',
            name='update_user',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resource_file_update_user', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='resourcerelationship',
            name='create_user',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resource_relationship_create_user', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='resourcerelationship',
            name='update_user',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resource_relationship_update_user', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='resourceurl',
            name='create_user',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resource_url_create_user', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='resourceurl',
            name='update_user',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resource_url_update_user', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='tag',
            name='create_user',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tag_create_user', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='tag',
            name='update_user',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tag_update_user', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='resourcetag',
            name='create_user',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resourcetag_create_user', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='resourcefile',
            name='sha1',
            field=models.CharField(blank=True, editable=False, max_length=40, null=True),
        ),
        migrations.AlterModelManagers(
            name='category',
            managers=[
                ('categories', django.db.models.manager.Manager()),
            ],
        ),
        migrations.AlterField(
            model_name='tag',
            name='description',
            field=ckeditor.fields.RichTextField(blank=True, default=None, null=True),
        ),
        migrations.AlterField(
            model_name='tag',
            name='description_en',
            field=ckeditor.fields.RichTextField(blank=True, default=None, null=True),
        ),
        migrations.AlterModelManagers(
            name='resource',
            managers=[
                ('resources', django.db.models.manager.Manager()),
            ],
        ),
        migrations.AlterModelManagers(
            name='tag',
            managers=[
                ('tags', django.db.models.manager.Manager()),
            ],
        ),
    ]
